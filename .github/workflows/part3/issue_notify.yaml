name: issue-notify

on:
  issues:
    types: [opened]

jobs:
  get-keyword:
    runs-on: ubuntu-latest
    outputs:
      level: ${{ steps.get-keyword.outputs.level }}
    steps:
      - name: checkout
        uses: actions/checkout@v4 # 텍스트 파일 접근을 위해 checkout
      - name: get-keyword
        id: get-keyword
        run: | # 텍스트 값을 순회하며 일치하는 키워드를 지정
          echo level=Undefined >> $GITHUB_OUTPUT
          
          keywords=$(cat keyword-list.txt)
          for keyword in $keywords; do
          if [[ "${{ github.event.issue.title }}" =~ "$keyword" ]]; then
          echo level=$keyword >> $GITHUB_OUTPUT
          fi
          done
      - name: get output
        run: |
          echo ${{ steps.get-keyword.outputs.level }}
  slack:
    needs: [get-keyword]
    if: needs.gey-keyword.outputs.level != 'Undefined' # 성공했지만 유효한 keyword 일 때만 실행
    runs-on: ubuntu-latest
#    environment: ${{ needs.get-keyword.outputs.level }} # keyword 에 따라 environment 에서 다른 웹훅 채널 URL 을 가져오도록
    strategy:
        matrix:
            level: ["${{ needs.get-keyword.outputs.level }}"]
    steps:
      - name: slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          payload: |
            {
              "attachments": [
                {
                  "pretext": "issue open alert message",
                  "color": "#36a64f",
                  "fields": [
                    {
                      "title": "Level: ${{ needs.get-keyword.outputs.level }}",
                      "short": true,
                      "value": "issue url: ${{ github.event.issue.html_url }}"
                    }
                  ]
                }
              ]
            }
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # "environment" > repo > org 순으로 사용.
          SLACK_WEBHOOK_TYPE: INCOMING_WEBHOOK
